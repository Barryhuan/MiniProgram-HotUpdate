{"version":3,"file":"index.js","mappings":";;;;;;;;;;;;AACA;AACA;AACA;AAFA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;AAuBA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAvBA;;AA+BA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;;AAEA;AACA;;AAGA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAbA;AAeA;;;;;;;;;;;;ACneA;AACA;AACA;AACA;AACA;AAEA;;;;;AANA;AAWA;AAAA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;AC3HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACvBA;;AAEA;;AAEA;;AAEA;;AAGA;AACA;AACA;AACA;AAHA;;AAMA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAnBA;AA0BA;AACA;;AAEA;AACA;AAGA;AACA;AACA;AACA;AAOA;AACA;AADA;AAGA;;AAEA;;AAEA;AAEA;;AAEA","sources":["webpack://test/./src/utils/chart.js","webpack://test/./src/utils/chartUtils.js","webpack://test/webpack/bootstrap","webpack://test/./src/index.js"],"sourcesContent":["\nmodule.exports = {\n  draw: init,\n  saveCanvans: saveCanvans\n}\n\nvar util = require(\"./chartUtils\");\nvar canvasId = '';\nvar pageObj = null;\nvar chartOpt = {\n  chartPieCount: 0,\n  hideXYaxis: false,\n  axisMark: [],\n  barLength: 0,\n  barNum: 0,\n  // bgColor: \"transparent\",\n  lineColor: \"#c2c2c2\",\n  bgColor: \"#ffffff\",\n  chartWidth: 0,\n  chartHeight: 0,\n  legendWidth: 0,\n  legendHeight: 0,\n  chartSpace: 10,\n  textSpace: 5,\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  axisLeft: 0,\n  axisBottom: 0,\n  axisTop: 0\n}\nvar dataSet = {\n  hideYaxis: false,\n  title: {\n    color: \"#394655\",\n    size: 16,\n    text: \"\"\n  },\n  legend: {\n    color: \"\",\n    size: 12\n  },\n  color: ['#74DAE5', '#394655', '#FEE746', '#B9A39B', '#C18734', '#9EC3AD', '#6D9BA3', '#7E9C82', '#DAEE59', '#CFDCED'],\n  xAxis: {\n    color: \"#666A73\",\n    size: 10,\n    data: []\n  },\n  series: [\n    {\n      name: \"\",\n      category: \"bar\",\n      data: []\n    },\n    {\n      name: \"\",\n      category: \"line\",\n      data: []\n    }\n  ]\n}\n\nfunction init(page, canvas, data) {\n  canvasId = canvas;\n  pageObj = page;\n  checkData(data);\n\n  var ctx = initCanvas(page, canvasId);\n  drawChart(ctx);\n}\n/**\n * 初始化Canvas\n */\nfunction initCanvas(page, canvasId) {\n  var ctx = wx.createCanvasContext(canvasId);\n  var Sys = wx.getSystemInfoSync();\n\n  chartOpt.chartWidth = Sys.windowWidth;\n  chartOpt.chartHeight = Sys.windowWidth * 0.8;//Canvas组件的宽高比\n\n  chartOpt.legendWidth = dataSet.legend.size * 1.3;\n  chartOpt.legendHeight = dataSet.legend.size * 0.8;\n\n  chartOpt.top = chartOpt.left = chartOpt.chartSpace;\n  chartOpt.right = chartOpt.chartWidth - chartOpt.chartSpace;\n  chartOpt.bottom = chartOpt.chartHeight - chartOpt.chartSpace;\n\n  //3个数字的文字长度\n  var textWidth = util.mesureText('100', dataSet.xAxis.size);\n  var legendHeight = dataSet.series.length > 1 ? (chartOpt.legendHeight + chartOpt.chartSpace * 2) : 0;\n\n  chartOpt.axisLeft = chartOpt.left + (dataSet.hideYaxis ? 0 : textWidth + chartOpt.textSpace);\n  chartOpt.axisBottom = chartOpt.bottom - dataSet.xAxis.size - chartOpt.textSpace - legendHeight;\n  chartOpt.axisTop = chartOpt.top + dataSet.title.size + chartOpt.textSpace + dataSet.xAxis.size * 2;\n\n\n  //更新页面Canvas的宽度、高度\n\n  page.data.chartWidth = chartOpt.chartWidth;\n  page.data.chartHeight = chartOpt.chartHeight;\n\n\n  return ctx;\n}\n/**\n * 检查并更新图表数据\n */\nfunction checkData(data) {\n\n  if (data.title != undefined) {\n    if (data.title.color != undefined && data.title.color != '') {\n      dataSet.title.color = data.title.color;\n    }\n    dataSet.title.text = data.title.text;\n\n  }\n  if(!data.color){\n    data.color = []\n  }\n  if (data.color != undefined && data.color != [] && data.color.length > 0) {\n    dataSet.color = data.color;\n  }\n  dataSet.xAxis.data = data.xAxis.data;\n\n\n  dataSet.series = data.series;\n\n  var value = new Array();\n  for (var i = 0; i < dataSet.series.length; i++) {\n    var item = dataSet.series[i];\n    var itemLenght = item.data.length;\n    if (itemLenght > chartOpt.barLength) {\n      chartOpt.barLength = itemLenght;\n    }\n    for (var k = 0; k < itemLenght; k++) {\n      value.push(item.data[k]);\n    }\n    if (item.category == 'bar') {\n      chartOpt.barNum += 1;\n\n    }\n    if (item.category == 'pie') {\n      chartOpt.hideXYaxis = true;\n      for (var k = 0; k < itemLenght; k++) {\n        chartOpt.chartPieCount += item.data[k];\n      }\n    }\n\n  }\n\n  var minNum = Math.min.apply(null, value);\n  var maxNum = Math.max.apply(null, value);\n  //计算Y轴刻度尺数据\n  chartOpt.axisMark = util.calculateY(minNum, maxNum, 5);\n}\n/**\n * 绘制图表\n */\nfunction drawChart(ctx) {\n  drawBackground(ctx);\n  drawTitle(ctx);\n  drawLegend(ctx);\n  if (!chartOpt.hideXYaxis) {\n    drawXaxis(ctx);\n    drawYaxis(ctx);\n  }\n\n  // drawBarChart(ctx);\n  drawCharts(ctx);\n  ctx.draw();\n}\n/**\n * 绘制图表背景\n */\nfunction drawBackground(ctx) {\n  if (chartOpt.bgColor != \"\" && chartOpt.bgColor != \"transparent\") {\n    ctx.setFillStyle(chartOpt.bgColor);\n    ctx.fillRect(0, 0, chartOpt.chartWidth, chartOpt.chartHeight);\n  }\n}\n/**\n * 绘制标题\n */\nfunction drawTitle(ctx) {\n  var title = dataSet.title;\n  if (title.text != '') {\n\n    var textWidth = util.mesureText(title.text, title.size);\n    ctx.setFillStyle(title.color);\n    ctx.setFontSize(title.size)\n    ctx.setTextAlign('left');\n    ctx.fillText(title.text, (chartOpt.chartWidth - textWidth) / 2, chartOpt.top + title.size);\n  }\n\n}\n/**\n * 绘制X轴刻度尺\n */\nfunction drawXaxis(ctx) {\n  //绘制X轴横线\n  ctx.setLineWidth(0.5);\n  ctx.setLineCap('round');\n  ctx.moveTo(chartOpt.axisLeft, chartOpt.axisBottom)\n  ctx.lineTo(chartOpt.right, chartOpt.axisBottom)\n  ctx.stroke();\n\n\n  var width = (chartOpt.right - chartOpt.axisLeft) / chartOpt.barLength;\n  var data = dataSet.xAxis.data;\n  //绘制X轴显示文字\n  for (var i = 0; i < data.length; i++) {\n    var textX = (width * (i + 1)) - (width / 2) + chartOpt.axisLeft;\n    ctx.setFillStyle(dataSet.xAxis.color);\n    ctx.setFontSize(dataSet.xAxis.size);\n    ctx.setTextAlign('center');\n    ctx.fillText(data[i], textX, chartOpt.axisBottom + dataSet.xAxis.size + chartOpt.textSpace);\n  }\n}\n/**\n * 绘制Y轴刻度尺\n */\nfunction drawYaxis(ctx) {\n\n  //绘制Y轴横线\n  ctx.setLineWidth(0.5);\n  ctx.setLineCap('round');\n\n  var height = (chartOpt.axisBottom - chartOpt.axisTop) / (chartOpt.axisMark.length - 1);\n  //绘制Y轴显示数字\n  for (var i = 0; i < chartOpt.axisMark.length; i++) {\n    var y = chartOpt.axisBottom - height * i;\n    if (i > 0) {\n      ctx.setStrokeStyle(chartOpt.lineColor);\n      util.drawDashLine(ctx, chartOpt.axisLeft, y, chartOpt.right, y);\n    }\n\n    if (!dataSet.hideYaxis) {\n      ctx.setFillStyle(dataSet.xAxis.color);\n      ctx.setFontSize(dataSet.xAxis.size)\n      ctx.setTextAlign('right');\n      ctx.fillText(chartOpt.axisMark[i], chartOpt.axisLeft - chartOpt.textSpace, y + chartOpt.textSpace);\n    }\n  }\n}\n\n/**\n * 绘制图例\n */\nfunction drawLegend(ctx) {\n  var series = dataSet.series;\n\n  for (var i = 0; i < series.length; i++) {\n    var names = series[i].name;\n    var isPie = series[i].category == 'pie';\n    var textWidth = util.mesureText(isPie?names[0]:names, dataSet.xAxis.size);\n    var legendWidth = chartOpt.legendWidth + textWidth + chartOpt.chartSpace * 2;\n    var startX = (chartOpt.chartWidth / 2) - (legendWidth * (isPie ?names.length:series.length)) / 2;\n\n    if (series[i].category == 'pie') {\n      for (var k = 0; k < names.length; k++) {\n        var x = startX + legendWidth * k;\n        var y = chartOpt.bottom - chartOpt.legendHeight;\n\n        ctx.setFillStyle(dataSet.xAxis.color);\n        ctx.setFontSize(dataSet.legend.size)\n        ctx.setTextAlign('left');\n        ctx.fillText(names[k], x + chartOpt.textSpace + chartOpt.legendWidth, chartOpt.bottom);\n\n        var color = getColor(k);\n        ctx.setFillStyle(color);\n        ctx.fillRect(x, y + 1, chartOpt.legendWidth, chartOpt.legendHeight);\n      }\n    } else {\n\n      var x = startX + legendWidth * i + chartOpt.legendWidth * i;\n      var y = chartOpt.bottom - chartOpt.legendHeight;\n\n      ctx.setFillStyle(dataSet.xAxis.color);\n      ctx.setFontSize(dataSet.legend.size)\n      ctx.setTextAlign('left');\n      ctx.fillText(series[i].name, x + chartOpt.chartSpace + chartOpt.legendWidth, chartOpt.bottom);\n\n      var color = getColor(i);\n      ctx.setFillStyle(color);\n      ctx.setLineWidth(2);\n      ctx.setStrokeStyle(color);\n      if (series[i].category == 'bar') {\n        ctx.fillRect(x, y + 1, chartOpt.legendWidth, chartOpt.legendHeight);\n      } else if (series[i].category == 'line') {\n        var lx = x + chartOpt.legendWidth / 2;\n        var ly = y + chartOpt.legendHeight / 2 + 1;\n        ctx.beginPath();\n        ctx.moveTo(x, ly);\n        ctx.lineTo(x + chartOpt.legendWidth, ly);\n        ctx.stroke();\n        ctx.closePath();\n        drawPoint(ctx, lx, ly, chartOpt.legendHeight / 2, color);\n        drawPoint(ctx, lx, ly, chartOpt.legendHeight / 4, chartOpt.bgColor);\n      }\n    }\n  }\n}\n/**\n * 绘制数据标签\n */\nfunction drawToolTips(ctx, text, x, y, color) {\n  ctx.setFillStyle(color);\n  ctx.setFontSize(dataSet.xAxis.size)\n  ctx.setTextAlign('center');\n  ctx.fillText(text, x, y);\n}\n/**\n * 画图\n */\nfunction drawCharts(ctx) {\n  var series = dataSet.series;\n  for (var i = 0; i < series.length; i++) {\n    var category = series[i].category;\n    var barWidth = (chartOpt.right - chartOpt.axisLeft) / chartOpt.barLength;\n    var barHeight = chartOpt.axisBottom - chartOpt.axisTop;\n    var maxMark = chartOpt.axisMark[chartOpt.axisMark.length - 1];\n\n    if (category == \"bar\") {\n      barWidth = barWidth - chartOpt.chartSpace;\n      drawBarChart(ctx, i, series, barWidth, barHeight, maxMark);\n    } else if (category == \"line\") {\n      drawLineChart(ctx, i, series, barWidth, barHeight, maxMark);\n    } else if (category == 'pie') {\n      drawPieChart(ctx, i, series);\n    }\n  }\n}\n/**\n * 绘制柱状图\n */\nfunction drawBarChart(ctx, i, series, barWidth, barHeight, maxMark) {\n  var item = series[i];\n  var itemWidth = barWidth / chartOpt.barNum;\n\n  for (var k = 0; k < item.data.length; k++) {\n    var itemHeight = barHeight * (item.data[k] / maxMark);\n    var x = (barWidth * k + chartOpt.axisLeft + k * chartOpt.chartSpace + (chartOpt.chartSpace / 2)) + (i * itemWidth);\n    var y = chartOpt.axisBottom - itemHeight;\n    var color = getColor(series.length <= 1 ? k : i);\n    ctx.setFillStyle(color);\n    ctx.fillRect(x, y, itemWidth, itemHeight);\n\n    drawToolTips(ctx, item.data[k], x + itemWidth / 2, y - chartOpt.textSpace, color);\n  }\n}\n/**\n * 绘制折线图\n */\nfunction drawLineChart(ctx, i, series, barWidth, barHeight, maxMark) {\n  var item = series[i];\n  var color = getColor(i);\n  ctx.setLineWidth(2);\n  ctx.setStrokeStyle(color);\n  ctx.beginPath();\n  for (var k = 0; k < item.data.length; k++) {\n    var point = getLinePoint(k, item, barWidth, barHeight, maxMark);\n    if (k == 0) {\n      ctx.moveTo(point.x, point.y);\n    } else {\n      ctx.lineTo(point.x, point.y);\n    }\n  }\n  ctx.stroke();\n  ctx.closePath();\n  for (var k = 0; k < item.data.length; k++) {\n    var point = getLinePoint(k, item, barWidth, barHeight, maxMark);\n    drawPoint(ctx, point.x, point.y, 3, color);\n    drawPoint(ctx, point.x, point.y, 1, chartOpt.bgColor);\n    drawToolTips(ctx, item.data[k], point.x, point.y - chartOpt.chartSpace, color);\n  }\n}\nfunction getLinePoint(k, item, barWidth, barHeight, maxMark) {\n  var x = barWidth * k + chartOpt.axisLeft + barWidth / 2;\n  var y = chartOpt.axisBottom - (barHeight * (item.data[k] / maxMark));\n  return { x: x, y: y }\n}\nfunction drawPoint(ctx, x, y, radius, color) {\n  ctx.setFillStyle(color);\n  ctx.beginPath();\n  ctx.arc(x, y, radius, 0, 2 * Math.PI);\n  ctx.fill();\n  ctx.closePath();\n}\n/**\n * 绘制饼图\n */\nfunction drawPieChart(ctx, i, series) {\n  var item = series[i];\n\n  var x = (chartOpt.right - chartOpt.left) / 2 + chartOpt.left;\n  var radius = (chartOpt.axisBottom - chartOpt.axisTop) / 3;\n  var y = (chartOpt.axisBottom - chartOpt.axisTop) / 2 + chartOpt.axisTop\n\n  var lastAngel = 0;\n  for (var k = 0; k < item.data.length; k++) {\n    var color = getColor(k);\n    var curAngel = 2 / chartOpt.chartPieCount * item.data[k];\n    var precent = 100 / chartOpt.chartPieCount * item.data[k];\n\n    drawPieToolTips(ctx, item.data[k] + \"(\" + Math.round(precent) + \"%)\", color, x, y, radius, lastAngel, curAngel);\n\n    ctx.setFillStyle(color);\n    ctx.beginPath();\n    ctx.moveTo(x, y);\n    ctx.arc(x, y, radius, (lastAngel - 0.5) * Math.PI, (lastAngel + curAngel - 0.5) * Math.PI);\n    ctx.fill();\n    ctx.closePath();\n    lastAngel += curAngel;\n\n  }\n}\n/**\n * 绘制饼图数据标签\n */\nfunction drawPieToolTips(ctx, value, color, x, y, radius, lastAngel, curAngel) {\n  var textWidth = util.mesureText(value, dataSet.xAxis.size);\n  var cosc = Math.cos((lastAngel - 0.5 + curAngel / 2) * Math.PI);\n  var sinc = Math.sin((lastAngel - 0.5 + curAngel / 2) * Math.PI);\n  var x1 = (radius) * cosc + x;\n  var y1 = (radius) * sinc + y;\n\n  var x2 = (radius + 20) * cosc + x;\n  var y2 = (radius + 20) * sinc + y;\n\n  ctx.setFillStyle(color);\n  ctx.setTextAlign(x2 < x1 ? 'right' : 'left');\n  ctx.setFontSize(dataSet.xAxis.size);\n  ctx.setStrokeStyle(color);\n  ctx.setLineWidth(1);\n  ctx.beginPath();\n  ctx.moveTo(x1, y1);\n  if (x1 >= x && y1 < y) {\n    ctx.quadraticCurveTo(x2, y2, x2 + 15, y2)\n    ctx.fillText(value, x2 + 15 + chartOpt.textSpace, y2 + dataSet.xAxis.size / 2);\n  } else if (x1 >= x && y1 >= y) {\n    ctx.quadraticCurveTo(x2, y2, x2 + 15, y2)\n    ctx.fillText(value, x2 + 15 + chartOpt.textSpace, y2 + dataSet.xAxis.size / 2);\n  } else if (x1 < x && y1 >= y) {\n    ctx.quadraticCurveTo(x2, y2, x2 - 15, y2)\n    ctx.fillText(value, x2 - 15 - chartOpt.textSpace, y2 + dataSet.xAxis.size / 2);\n  } else if (x1 < x && y1 < y) {\n    ctx.quadraticCurveTo(x2, y2, x2 - 15, y2)\n    ctx.fillText(value, x2 - 15 - chartOpt.textSpace, y2 + dataSet.xAxis.size / 2);\n  }\n  ctx.stroke();\n  ctx.closePath();\n}\n/**\n * 获取柱状图颜色值，循环渲染\n */\nfunction getColor(index) {\n  var cLength = dataSet.color.length;\n  if (index >= cLength) {\n    return dataSet.color[index % cLength];\n  } else {\n    return dataSet.color[index];\n  }\n}\n/**\n * 保存图表为图片\n */\nfunction saveCanvans(func) {\n  wx.canvasToTempFilePath({\n    canvasId: canvasId,\n    success: function (res) {\n      console.log(res.tempFilePath)\n      // wx.previewImage({\n      //   urls: [res.tempFilePath],\n      // })\n      wx.saveImageToPhotosAlbum({\n        filePath: res.tempFilePath,\n        success(ress) {\n          console.log(ress)\n        }\n      })\n    }\n  })\n}","module.exports = {\n  mesureText: mesureText,\n  calculateY: calculateY,\n  drawDashLine: drawDashLine,\n  drawRoundBar: drawRoundBar\n}\n/**\n * 测量文字宽度，\n * Canvas宽度太大，微信提供的setTextAlign(center)\n * 方法并不能准确居中显示\n */\nfunction mesureText(text = '100', textSize) {\n  var ratio = textSize / 20;\n  console.log(text, 'text')\n  var text = text.split('');\n  \n  var width = 0;\n  text.forEach(function (item) {\n    if (/[a-zA-Z]/.test(item)) {\n      width += (14 * ratio);\n    } else if (/[0-9]/.test(item)) {\n      width += (11 * ratio);\n    } else if (/\\./.test(item)) {\n      width += (5.4 * ratio);\n    } else if (/-/.test(item)) {\n      width += (6.5 * ratio);\n    } else if (/[\\u4e00-\\u9fa5]/.test(item)) {\n      width += (20 * ratio);\n    }\n  });\n  return width;\n}\n/**\n * 计算Y轴显示刻度\n */\nfunction calculateY(dMin, dMax, iMaxAxisNum) {\n  if (iMaxAxisNum < 1 || dMax < dMin)\n    return;\n\n  var dDelta = dMax - dMin;\n  if (dDelta < 1.0) {\n    dMax += (1.0 - dDelta) / 2.0;\n    dMin -= (1.0 - dDelta) / 2.0;\n  }\n  dDelta = dMax - dMin;\n\n  var iExp = parseInt(Math.log(dDelta) / Math.log(10.0)) - 2;\n  var dMultiplier = Math.pow(10, iExp);\n  var dSolutions = [1, 2, 2.5, 5, 10, 20, 25, 50, 100, 200, 250, 500];\n  var i;\n  for (i = 0; i < dSolutions.length; i++) {\n    var dMultiCal = dMultiplier * dSolutions[i];\n    if ((parseInt(dDelta / dMultiCal) + 1) <= iMaxAxisNum) {\n      break;\n    }\n  }\n\n  var dInterval = dMultiplier * dSolutions[i];\n\n  var dStartPoint = (parseInt(dMin / dInterval) - 1) * dInterval;\n  var yIndex = [];\n  var iAxisIndex;\n  for (iAxisIndex = 1; true; iAxisIndex++) {\n    var y = dStartPoint + dInterval * iAxisIndex;\n    console.log(y);\n    yIndex.push(y);\n    if (y > dMax)\n      break;\n  }\n  return yIndex;\n}\n/**\n * 绘制虚线\n */\nfunction drawDashLine(ctx, x1, y1, x2, y2, dashLen) {\n  dashLen = dashLen === undefined ? 4 : dashLen;\n  var beveling = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n  var num = Math.floor(beveling / dashLen);\n\n  ctx.beginPath();\n  for (var i = 0; i < num; i++) {\n    var x = x1 + (x2 - x1) / num * i;\n    var y = y1 + (y2 - y1) / num * i;\n    if (i % 2 == 0) {\n      ctx.moveTo(x, y);\n    } else {\n      ctx.lineTo(x, y);\n    }\n\n  }\n  ctx.stroke();\n  ctx.closePath();\n}\n/**\n * 绘制圆角矩形\n */\nfunction drawRoundBar(ctx, x, y, width, height, radius) {\n  ctx.beginPath();\n  ctx.arc(x + radius, y + radius, radius, Math.PI, Math.PI * 3 / 2);\n  ctx.lineTo(width - radius + x, y);\n  ctx.arc(width - radius + x, radius + y, radius, Math.PI * 3 / 2, Math.PI * 2);\n  ctx.lineTo(width + x, height + y - radius);\n  ctx.arc(width - radius + x, height - radius + y, radius, 0, Math.PI * 1 / 2);\n  ctx.lineTo(radius + x, height + y);\n  ctx.arc(radius + x, height - radius + y, radius, Math.PI * 1 / 2, Math.PI);\n  ctx.closePath();\n  ctx.fill();\n}\n\nfunction requestAnimation(callback) {\n  var that = this;\n  // 保证如果重复执行callback的话，callback的执行起始时间相隔16ms \n  var currTime = new Date().getTime();\n  var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n  var id = setTimeout(function () {\n    callback(currTime + timeToCall);\n  }, timeToCall);\n  lastTime = currTime + timeToCall;\n  return id;\n}\n\nfunction easeOut(t, b, c, d) {\n  return c * ((t = t / d - 1) * t * t + 1) + b;\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","var chart = require(\"./utils/chart\");\n\nconsole.log(chart)\n\nfunction runCode(that, e) {\n\n    wx.setNavigationBarTitle({ title: '热更新' });\n\n\n    that.data = {\n        index: 0,\n        chartWidth: 0,\n        chartHeight: 0\n    }\n    \n    that.onload = function() {\n        chart.draw(that, 'canvas1', {\n            title: {\n              text: \"2017城市人均收入(万)\",\n              color: \"#333333\"\n            },\n            xAxis: {\n              data: ['北京', '上海', '杭州', '深圳', '广州', '成都', '南京', '西安']\n            },\n            series: [\n              // {\n              //   name: \"第一季度\",\n              //   category: \"bar\",\n              //   data: [37, 63, 60, 78, 92, 63, 57, 48]\n              // },\n              // {\n              //   name: \"第二季度\",\n              //   category: \"line\",\n              //   data: [20, 35, 38, 59, 48, 27, 43, 35]\n              // },\n              {\n                name: ['北京', '上海', '杭州', '深圳', '广州', '成都'],\n                category: \"pie\",\n                data: [40, 38, 39, 28, 27, 33]\n              }\n            ]\n          });\n          that.reSetPage()\n    }\n\n    that.onSaveClick = function () {\n        chart.saveCanvans(function () {\n    \n        });\n    }\n    //每一次刷新建议重新调用\n    that.reSetPage = function () {\n        that.data.html =\n            `\n      \n        \n        <canvas canvas_id=\"canvas1\"  style=\"background-color: #f4f4f4;width:${that.data.chartWidth}px;height:${that.data.chartHeight}px;\"/>\n        <button class=\"downloadChart\" bindtap=\"onSaveClick\">保存图片</button>\n      `\n        that.setData({\n            html: that.parse(that.data.html)\n        });\n    };\n\n    that.reSetPage()\n\n    that.onload()\n\n}\n\nwindow.exports = runCode;\n"],"names":[],"sourceRoot":""}